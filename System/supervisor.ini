;项目名
[program:todo]
;脚本目录，先cd到项目目录，再执行
directory = /data/todo/System/
;脚本执行命令,todo:注意修改虚拟环境路径
command = bash -c "source /pub/miniconda3/bin/activate django && gunicorn -c gunicorn.py Config.wsgi"
;process_name：一个python字符串表达式，用来表示supervisor进程启动的这个的名称，默认值是%(program_name)s
;数字越高，优先级越高
priority = 1
;启动几个进程
numprocs = 1
;supervisor启动的时候是否随着同时启动，默认True
autostart = true
;当程序exit的时候，这个program不会自动重启,默认unexpected，设置子进程挂掉后自动重启的情况，有三个选项，false,unexpected和true。
;如果为false的时候，无论什么情况下，都不会被重新启动，如果为unexpected，只有当进程的退出码不在下面的exitcodes里面定义的
;autorestart = true
autorestart = unexpected
;启动失败时的最多重试次数
startretries = 10
;正常退出代码
exitcodes = 0
; 用来杀死进程的信号，默认为9
stopsignal = KILL
;stopsignal = QUIT
; 发送SIGKILL前的等待时间
stopwaitsecs = 5
;这个选项是子进程启动多少秒之后，此时状态如果是running，则我们认为启动成功了。默认值为1
startsecs = 1
;连带子进程一起停止，一般用于多进程的情况，如gunicorn开启多进程
stopasgroup = true
;杀死进程时杀死子进程
killasgroup=true
;脚本运行的用户身份
user = root

;日志输出
;请使用绝对路径，如果使用相对路径，只有在相对路径下的文件夹下启动supervisor的时候有效，而更新、重载是无效的
;而且多个配置文件如果使用相同的相对路径，会全部定向到一个日志文件，这是错误的
;stdout_logfile=/var/logs/%(program_name)/access-%(date).log
stdout_logfile = /data/todo/System/logs/supervisor/access_standby.log
stderr_logfile = /data/todo/System/logs/supervisor/error_standby.log
;把stderr重定向到stdout，默认 false
;redirect_stderr = true
;stdout日志文件大小，默认 50MB
stdout_logfile_maxbytes = 100MB
;stdout日志文件备份数
stdout_logfile_backups = 20